def inline [ + ](x: Int, y: Int) -> Int {
    return %iadd(x, y);
}

def inline [ - ](x: Int, y: Int) -> Int {
    return %isub(x, y);
}

def inline [ * ](x: Int, y: Int) -> Int {
    return %imul(x, y);
}

def inline [ / ](x: Int, y: Int) -> Int {
    return %idiv(x, y);
}

def inline [ % ](x: Int, y: Int) -> Int {
    return %imod(x, y);
}

def main() -> Int {
    while 1 {
        return 5;
    }

    if 5 + 3 {
        return 2;
    }

    if 0 {
        return 7;
    } {
        while 0 {
            return 4;
        }
    }

    return 16 / 2 + 3;
}
